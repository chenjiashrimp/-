"""Functions that simulate dice rolls.

A dice function takes no arguments and returns a number from 1 to n
(inclusive), where n is the number of sides on the dice.

Types of dice:

 -  A fair dice produces each possible outcome with equal probability.
   Two fair dice are already defined, four_sided and six_sided,
   and are generated by the make_fair_dice function.

 -  A test dice is deterministic: it always cycles through a fixed
   sequence of values that are passed as arguments.
   Test dice are generated by the make_test_dice function.
"""

from random import randint


def make_fair_dice(sides):
    """Return a die that returns 1 to SIDES with equal chance."""
    assert type(sides) == int and sides >= 1, 'Illegal value for sides'
    ##断言 判断一个表达式，表达式为false时显示出异常，可直接返回错误而不用等到崩溃时候
    def dice():
        return randint(1, sides)
    return dice###返回的是一个函数，而不是函数调用的值


four_sided = make_fair_dice(4)
six_sided = make_fair_dice(6)


def make_test_dice(*outcomes):
    """Return a die that cycles deterministically through OUTCOMES.

    >>> dice = make_test_dice(1, 2, 3)
    >>> dice()
    1
    >>> dice()
    2
    >>> dice()
    3
    >>> dice()
    1
    >>> dice()
    2

    This function uses Python syntax/techniques not yet covered in this course.
    The best way to understand it is by reading the documentation and examples.
    """
    assert len(outcomes) > 0, 'You must supply outcomes to make_test_dice'
    for o in outcomes:
        assert type(o) == int and o >= 1, 'Outcome is not a positive integer'
    index = len(outcomes) - 1
    #index需要事先声明，不然nonlocal就会报错
    def dice():
        nonlocal index##声明变量只在局部起作用，在封装函数中，需要现在外部函数声明，然后再在内部函数
        #用nonlocal说明这样，这两个index就是一个变量，如果不用nonlocal就是两个变量
        index = (index + 1) % len(outcomes)
        return outcomes[index]
    return dice
